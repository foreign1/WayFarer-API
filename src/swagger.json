{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "WayFarer-API",
    "description": "A public bus transportation booking backend API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "wayfarerapi-andela.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "User",
      "description": "Operations about user",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://wayfarerapi-andela.herokuapp.com"
      }
    },
    {
      "name": "Trip",
      "description": "Access to trips",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://wayfarerapi-andela.herokuapp.com"
      }
    },
    {
      "name": "Booking",
      "description": "Access to bookings",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://wayfarerapi-andela.herokuapp.com"
      }
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create user account",
        "description": "",
        "operationId": "signup",
        "consumes": [
          "application/json"
        ],
        "produces": [

          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "Valid email address",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Valid password",
            "required": true,
            "type": "string"
          },
          {
            "name": "first_name",
            "in": "formData",
            "description": "John",
            "required": true,
            "type": "string"
          },
          {
            "name": "last_name",
            "in": "formData",
            "description": "Doe",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created user",
            "schema": {
              "$ref": "#/definitions/Signup"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error occured",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "admin/auth/signup": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create admin user account",
        "description": "",
        "operationId": "signup",
        "consumes": [
          "application/json"
        ],
        "produces": [

          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "Valid email address",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Valid password",
            "required": true,
            "type": "string"
          },
          {
            "name": "first_name",
            "in": "formData",
            "description": "John",
            "required": true,
            "type": "string"
          },
          {
            "name": "last_name",
            "in": "formData",
            "description": "Doe",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created user",
            "schema": {
              "$ref": "#/definitions/Signup"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error occured",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Login a user",
        "description": "",
        "operationId": "signin",
        "consumes": [
          "application/json"
        ],
        "produces": [

          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "Valid email address",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Valid password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created admin user",
            "schema": {
              "$ref": "#/definitions/Signin"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error occured",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/trips": {
      "post": {
        "tags": [
          "Trip"
        ],
        "summary": "Create a trip",
        "description": "",
        "operationId": "trip",
        "consumes": [
          "application/json"
        ],
        "produces": [

          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Create Trip",
            "schema": {
              "$ref": "#/definitions/Auth"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created trip",
            "schema": {
              "$ref": "#/definitions/Trip"
            }
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "get": {
        "tags": [
          "Trip"
        ],
        "summary": "Get all trips",
        "description": "",
        "operationId": "trip",
        "consumes": [
          "application/json"
        ],
        "produces": [

          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "description": "User JWT token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Trips"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "404": {
            "description": "404 Not found",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error occured",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        },
        "security": [
          {
            "access_token": []
          }
        ]
      }
    },
    "/trips/{tripId}": {
      "put": {
        "tags": [
          "Trip"
        ],
        "summary": "Cancel a trip",
        "description": "",
        "operationId": "trip",
        "consumes": [
          "application/json"
        ],
        "produces": [

          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "description": "User JWT token",
            "required": true,
            "type": "string"
          },
          {
            "name": "tripId",
            "in": "path",
            "description": "ID of trip to cancel",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "202": {
            "description": "Update trip",
            "schema": {
              "$ref": "#/definitions/ApiSuccessResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error occured",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        },
        "security": [
          {
            "access_token": []
          }
        ]
      }
    },
    "/bookings": {
      "post": {
        "tags": [
          "Booking"
        ],
        "summary": "Book a seat on a trip",
        "description": "",
        "operationId": "create-booking",
        "consumes": [
          "application/json"
        ],
        "produces": [

          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Create Booking",
            "schema": {
              "$ref": "#/definitions/Auth"
            }
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "ID of trip to create booking",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "201": {
            "description": "Created booking",
            "schema": {
              "$ref": "#/definitions/Booking"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error occured",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "Get all bookings",
        "description": "",
        "operationId": "get-bookings",
        "consumes": [
          "application/json"
        ],
        "produces": [

          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "description": "User JWT token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Bookings"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "404": {
            "description": "404 Not found",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error occured",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        },
        "security": [
          {
            "access_token": []
          }
        ]
      }
    },
    "/bookings/?destination={destination}": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "Get all bookings by destination",
        "description": "",
        "operationId": "get-bookings-by-destination",
        "consumes": [
          "application/json"
        ],
        "produces": [

          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "description": "User JWT token",
            "required": true,
            "type": "string"
          },
          {
            "name": "destination",
            "in": "query",
            "description": "Destination to filter bookings",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Bookings"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "404": {
            "description": "404 Not found",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error occured",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        },
        "security": [
          {
            "access_token": []
          }
        ]
      }
    },
    "/bookings/?origin={origin}": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "Get all bookings by origin",
        "description": "",
        "operationId": "get-bookings-by-origin",
        "consumes": [
          "application/json"
        ],
        "produces": [

          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "description": "User JWT token",
            "required": true,
            "type": "string"
          },
          {
            "name": "origin",
            "in": "query",
            "description": "Origin to filter bookings",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Bookings"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "404": {
            "description": "404 Not found",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error occured",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        },
        "security": [
          {
            "access_token": []
          }
        ]
      }
    },
    "/bookings/{bookingId}": {
      "put": {
        "tags": [
          "Booking"
        ],
        "summary": "Change booking seat",
        "description": "",
        "operationId": "change-booking-seat",
        "consumes": [
          "application/json"
        ],
        "produces": [

          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "description": "User JWT token",
            "required": true,
            "type": "string"
          },
          {
            "name": "bookingId",
            "in": "path",
            "description": "ID of booking to change seat",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "202": {
            "description": "Update booking",
            "schema": {
              "$ref": "#/definitions/ApiSuccessResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error occured",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        },
        "security": [
          {
            "access_token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Booking"
        ],
        "summary": "Delete a trip",
        "description": "",
        "operationId": "delete-booking",
        "consumes": [
          "application/json"
        ],
        "produces": [

          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "description": "User JWT token",
            "required": true,
            "type": "string"
          },
          {
            "name": "bookingId",
            "in": "path",
            "description": "ID of booking to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "202": {
            "description": "Delete booking",
            "schema": {
              "$ref": "#/definitions/ApiSuccessResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error occured",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        },
        "security": [
          {
            "access_token": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "access_token": {
      "type": "apiKey",
      "name": "token",
      "in": "header"
    }
  },
  "definitions": {
    "Auth": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer"
        },
        "is_admin": {
          "type": "boolean"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "Signup": {
      "type": "object",
      "properties": {
        "success": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Auth"
        }
      }
    },
    "Signin": {
      "type": "object",
      "properties": {
        "success": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Auth"
        }
      }
    },
    "TripData": {
      "type": "object",
      "properties": {
        "tri_id": {
          "type": "integer"
        },
        "bus_id": {
          "type": "integer"
        },
        "origin": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "trip_date": {
          "type": "string",
          "format": "date-time"
        },
        "fare": {
          "type": "integer"
        },
        "status": {
          "type": "string",
          "enum": [
            "active",
            "cancelled"
          ]
        }
      },
      "xml": {
        "name": "Trip"
      }
    },
    "Trip": {
      "type": "object",
      "properties": {
        "success": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/TripData"
        }
      }
    },
    "Trips": {
      "type": "object",
      "properties": {
        "success": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/TripData"
          }
        }
      }
    },
    "BookingData": {
      "type": "object",
      "properties": {
        "booking_id": {
          "type": "integer"
        },
        "trip_id": {
          "type": "integer"
        },
        "user_id": {
          "type": "integer"
        },
        "bus_id": {
          "type": "integer"
        },
        "trip_date": {
          "type": "string",
          "format": "date-time"
        },
        "seat_nmuber": {
          "type": "integer"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "created_on": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Booking": {
      "type": "object",
      "properties": {
        "success": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/BookingData"
        }
      }
    },
    "Bookings": {
      "type": "object",
      "properties": {
        "success": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/BookingData"
          }
        }
      }
    },
    "ApiSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            }
          }
        }
      }
    },
    "ApiErrorResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      }
    }
  }
}